#!/usr/bin/env sh

# Set good defaults to allow script to be run by hand. The two variables below
# will never be used when run from within the Docker hub.
DOCKER_REPO=${DOCKER_REPO:-"efrecon/vcluster"}
SOURCE_COMMIT=${SOURCE_COMMIT:-$(git log --no-decorate|grep '^commit'|head -n 1| awk '{print $2}')}

# helm version, when empty, the default, this will be the latest stable
# version at the time of the build. There also must be a version of the
# efrecon/kubectl image at this version at the time of the build.
HELM_VERSION=

GH_PROJECT=loft-sh/vcluster

# rx for matching release versions of helm/vcluster
SEMVER_SHARP='v[0-9]+\.[0-9]+\.[0-9]+'
SEMVER_ALL='v[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+\.[0-9]+)?'

# shellcheck disable=SC1091
. "$(dirname "$0")/reg-tags/image_tags.sh"

[ -z "$HELM_VERSION" ] && HELM_VERSION=$(github_releases --release "$SEMVER_SHARP" "helm/helm" | head -n 1)

# Compute which registry we use to pass this as a build argument below
DOCKER_REGROOT=$(printf %s\\n "$DOCKER_REPO" | cut -d / -f 1)
if ! printf %s\\n "$DOCKER_REGROOT" | grep -q '\.'; then
  echo "Automatically rooting at Docker Hub"
  DOCKER_REGROOT=docker.io
else
  echo "Using registry $DOCKER_REGROOT"
fi

# Login at the Docker hub to be able to access info about the image.
token=$(img_auth "$DOCKER_REPO")

echo "============== Gettings latest releases for $GH_PROJECT at github"
for tag in $(github_releases --release "$SEMVER_ALL" "$GH_PROJECT"); do
  # Get the revision out of the org.opencontainers.image.revision label, this
  # will be the label where we store information about this repo (it cannot be
  # the tag, since we tag as the base image).
  revision=$(img_labels --verbose --token "$token" -- "$DOCKER_REPO" "$tag" |
              grep "^org.opencontainers.image.revision" |
              sed -E 's/^org.opencontainers.image.revision=(.+)/\1/')
  # If the revision is different from the source commit (including empty,
  # which will happen when our version of the image does not already exist),
  # build the image, making sure we label with the git commit sha at the
  # org.opencontainers.image.revision OCI label, but using the same tag as the
  # library image.
  if [ "$revision" != "$SOURCE_COMMIT" ]; then
    echo "============== No ${DOCKER_REPO}:$tag at $SOURCE_COMMIT"
    docker build \
      --build-arg HELM_VERSION="$HELM_VERSION" \
      --build-arg VCLUSTER_VERSION="$tag" \
      --build-arg DOCKER_REGROOT="$DOCKER_REGROOT" \
      --tag "${DOCKER_REPO}:$tag" \
      --label "org.opencontainers.image.revision=$SOURCE_COMMIT" \
      .
  fi
done